#:kivy 2.2.0
# Define your background color Template
<BackgroundColor@Widget>
    background_color: (1, 1, 1, 1)
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos

# # Now you can simply Mix the `BackgroundColor` class with almost
# # any other widget... to give it a background.

<BackgroundLabel@Label+BackgroundColor>
    background_color: (0, 0, 0, 0)
    # Default the background color for this label
    # to r 0, g 0, b 0, a 0

# # Use the BackgroundLabel any where in your kv code like below
<BackgroundGridLayout@GridLayout,BackgroundColor>
    background_color: 0, 0, 0, 0


<Border@Widget>
    border_width: 1
    border_color: (0,0,0,0)
    canvas.before:
        Color:
            rgba: root.border_color
        Line:
            width: root.border_width+1
            rectangle: self.x, self.y, self.width, self.height

<BorderGridLayout@GridLayout+Border>
    border_width: 1
    # border_color: (0,0,0,0)

<BorderRelativeLayout@RelativeLayout+Border>
    border_width: 1

<BorderLabel@Label+Border>
    border_width: 1
    # border_color: (0,0,0,0)

<ToolTip>:
    size_hint: None, None
    size: self.texture_size[0]+5, self.texture_size[1]+5
    BubbleContent:
        Label:
            text: 'hello'
            
<FloatInput>:
    font_size: 14
    multiline: False
    value: 0 if len(self.text) == 0 else (float(self.text) if self.text != '-' else 0)
    # canvas.before:
    #     Color:
    #         rgb: 0.2, 0.2, 0.2
    #     Rectangle:
    #         size: self.size
    #         pos: self.pos
<IntegerInput>:
    font_size: 14
    multiline: False
    value: 0 if len(self.text) == 0 else int(self.text)

<BorderedLabeledFloatInput@GridLayout+Border>
    cols: 2
    label_text: ''
    initial_value: 0

    Label:
        id: blfi_label
        size_hint: None, None
        size: self.texture_size[0]+10, self.texture_size[1]+10
        text:root.label_text
    FloatInput:
        id: fi
        size_hint: None, None
        height: blfi_label.height
        width: root.width - blfi_label.width-10
        text: str(root.initial_value)
        on_text: root.cmd_update(fi)

<BorderedLabeledIntegerInput@GridLayout+Border>
    cols: 2
    label_text: ''
    initial_value: 0
    Label:
        id: blii_label
        size_hint: None, None
        size: self.texture_size[0]+10, self.texture_size[1]+10
        text:root.label_text
    IntegerInput:
        size_hint: None, None
        height: blii_label.height
        width: root.width - blii_label.width-10
        text: str(root.initial_value)